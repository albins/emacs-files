// -*-js-*-
define_key(text_keymap, "C-h", "cmd_deleteCharBackward");
define_key(text_keymap, "C-w", "cmd_deleteWordBackward");

define_key (minibuffer_keymap, "C-m", "exit-minibuffer");

// load urls from the command line in new buffers instead
// of new windows.
url_remoting_fn = load_url_in_new_buffer;


// use emacs as external editor.
editor_shell_command = "emacsclient";

// view source in your editor.
view_source_use_external_editor = true;

define_key(default_global_keymap, "C-x C-m", "execute-extended-command");

url_completion_use_history = true;
url_completion_use_bookmarks = true;

define_webjump("bokborsen", "http://www.bokborsen.se/page-start?issearch=1&sall=1&scat=0&maincat=1&extendedsearch=1&mediatype=0&sallstr=%s&screator=&stitle=")
define_webjump("youtube", "http://www.youtube.com/results?search_query=%s&search=Search");
define_webjump("libris", "http://libris.kb.se/hitlist?d=libris&q=%s&f=simp&spell=true&hist=true&p=1");
define_webjump("opac", "http://bookit.uppsala.se/pls/bookit/pkg_www_search.ccl_search?in_ccl_query_encoded=the%s");
define_webjump("lt-tag", "http://www.librarything.com/tag/%s");
define_webjump("emacswiki",
    "http://www.google.com/cse?cx=004774160799092323420%3A6-ff2s0o6yi"+
        "&q=%s&sa=Search&siteurl=emacswiki.org%2F",
    $alternative="http://www.emacswiki.org/");
define_webjump("strek", "http://memory-alpha.org/wiki/index.php?search=%s&fulltext=0");
define_webjump("facebook", "http://openfacebooksearch.com/?q=%s");
define_webjump("torrentz", "http://torrentz.com/search?q=%s");
define_webjump("lyrics", "http://lyrics.wikia.com/Special:Search?search=%s&go=1");
define_webjump("mb-artist", "http://musicbrainz.org/search/textsearch.html?type=artist&query=%s&handlearguments=1&adv=1");
define_webjump("mb-track", "http://musicbrainz.org/search/textsearch.html?type=track&query=%s&handlearguments=1&adv=1");
define_webjump("mb-release", "http://musicbrainz.org/search/textsearch.html?type=release&query=%s&handlearguments=1");
define_webjump("studentportalen", "https://cas.user.uu.se/cas/login?service=https%3A%2F%2Fstudentportalen.uu.se%2Fportal%2Fportal%2Fuusp%3Fuusp.doLogin%3Dtrue");
define_webjump("quotes", "http://en.wikiquote.org/wiki/%s");
define_webjump("flickrcc", "http://www.flickr.com/search/?q=%s&l=cc&ct=0&mt=all&adv=1");
define_webjump("tradera",
    function (term) {
      return "http://www.tradera.com/search/result.aspx?header=true&search=" + escape(term) + "&search_category=-1";
    });
define_webjump("chicken","http://callcc.org/%s?noframes=1?inexact=1");
define_webjump("prisjakt", "http://www.prisjakt.nu/search.php?query=%s");
define_webjump("wine", "http://www.winehq.org/search?cx=partner-pub-0971840239976722%3Aw9sqbcsxtyf&cof=FORID%3A10&ie=UTF-8&q=%s&siteurl=appdb.winehq.org%2F");
require("page-modes/wikipedia.js");
wikipedia_webjumps_format = "%swp"; // controls the names of the webjumps.  default is "wikipedia-%s".
define_wikipedia_webjumps("en", "sv");
define_webjump("filmtipset", "http://www.filmtipset.se/search.cgi?x=0&y=0&search_value=%s&field=name&field=orgname");

// The actual function to actually add the feed. Currently it does nothing.
function really_add_feed (url) {
    shell_command_blind('/home/albin/.bin/sluk_add_feed.py "' + url + '"');
}

interactive("follow-feed", "Add this feed to feed2imap",
           function follow_feed(I) {
                       var document = I.window.buffers.current.document;
                       var head = document.getElementsByTagName('head');
                       var linkRelElems = document.getElementsByTagName("link");
                       var tlink;
                       var i = 0;
                       var feed = "";

                       while (tlink = linkRelElems[i++]) {
                         var thref = tlink.href;
                         var type = tlink.type;

                         if (type && type.match(/.*\/rss (\+xml)?$/i)) {
                           feed = thref;
                         } else if (type && type.match(/.*\/atom\+xml$/i)) {
                           feed = thref;
                         } else if (type && type.match(/^text\/xml$/i)) {
                           feed = thref;
                         }
                       }
//               I.window.minibuffer.message(feed);

               do_follow_feed = yield I.minibuffer.read_yes_or_no($prompt = "Add feed " + feed + "?");

               if(do_follow_feed) {
                   // We answered "yes"
                   really_add_feed(feed, I.window.minibuffer);
                   I.window.minibuffer.message("Added " + feed + ".");
               }
           });

// http://lab.arc90.com/experiments/readability/
interactive("readability_arc90",
            "Readability is a simple tool that makes reading on the web more enjoyable by removing the clutter around what you are reading",
            function readability_arc90(I) {
                var document = I.window.buffers.current.document;

                _readability_readStyle=document.createElement('SCRIPT');
                _readability_readStyle.text = 'var readStyle = style-newspaper;';
                document.getElementsByTagName('head')[0].appendChild(_readability_readStyle);
                _readability_readSize=document.createElement('SCRIPT');
                _readability_readSize.text = 'var readSize = size-medium;';
                document.getElementsByTagName('head')[0].appendChild(_readability_readSize);
                _readability_readMargin=document.createElement('SCRIPT');
                _readability_readMargin.text = 'var readMargin = margin-wide;';
                document.getElementsByTagName('head')[0].appendChild(_readability_readMargin);
                _readability_script=document.createElement('SCRIPT');
                _readability_script.type='text/javascript';
                _readability_script.src='http://lab.arc90.com/experiments/readability/js/readability.js?x='+(Math.random());
                document.getElementsByTagName('head')[0].appendChild(_readability_script);
                _readability_css=document.createElement('LINK');
                _readability_css.rel='stylesheet';
                _readability_css.href='http://lab.arc90.com/experiments/readability/css/readability.css';
                _readability_css.type='text/css';
                _readability_css.media='screen';
                document.getElementsByTagName('head')[0].appendChild(_readability_css);
                _readability_print_css=document.createElement('LINK');
                _readability_print_css.rel='stylesheet';
                _readability_print_css.href='http://lab.arc90.com/experiments/readability/css/readability-print.css';
                _readability_print_css.media='print';
                _readability_print_css.type='text/css';
                document.getElementsByTagName('head')[0].appendChild(_readability_print_css);
            });



define_key(content_buffer_normal_keymap, "z", "readability_arc90");

//add_delicious_webjumps("Tuss.luftslott.org");

xkcd_add_title = true;

download_buffer_automatic_open_target = [OPEN_NEW_BUFFER_BACKGROUND, OPEN_NEW_WINDOW];

cwd = make_file("/home/albin/Downloads");

require("block-content-focus-change.js");
content_handlers.set("application/pdf", content_handler_open);
content_handlers.set("application/msword", content_handler_open);
external_content_handlers.set("application/pdf", "evince");
external_content_handlers.set("application/vnd.openxmlformats-officedocument.wordprocessingml.document", "oowriter");
external_content_handlers.set("application/msword", "oowriter");
external_content_handlers.set("image/*", "feh");

interactive("reload-config", "reload conkerorrc",
       function(I) {
          load_rc();
          I.window.minibuffer.message("config reloaded");
       }
);
define_key(default_global_keymap, "C-c r", "reload-config");

interactive("youtube-play-in-external", "View a youtube video in an external player.",
            function(I) {
                url = I.buffer.current_uri;
                command = "/home/albin/.bin/youtube " + url 
                shell_command_blind(command);
            })

function org_capture (url, title, window) {
    var cmd_str = 'emacsclient \"org-protocol://capture:/w/'+url+'/'+title+'/"';
    if (window != null) {
      window.minibuffer.message('Issuing ' + cmd_str);
    }
    shell_command_blind(cmd_str);
}

interactive("org-capture", "Clip url, title, and selection to capture via org-protocol",
          function (I) {
              org_capture(encodeURIComponent(I.buffer.display_uri_string), encodeURIComponent(I.buffer.document.title), I.window);
          });

define_key(content_buffer_normal_keymap, "C-c r", "org-capture");

function mail_page (url, window) {
    var cmd_str = 'mail-web-page \"'+url+'\"';
    if (window != null) {
      window.minibuffer.message('Issuing ' + cmd_str);
    }
    shell_command_blind(cmd_str);
}

interactive("mail-current-page", "Clip url, title, and selection to capture via org-protocol",
          function (I) {
              mail_page(I.buffer.display_uri_string, I.window);
          });

define_key(content_buffer_normal_keymap, "C-c m", "mail-current-page");
